name: Fetch Latest Releases

on:
  schedule:
    - cron: '*/30 * * * *'  # 30분마다 실행
  workflow_dispatch:  # 수동 실행

jobs:
  fetch-latest-releases:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3

      - name: Fetch release data and write to JSON
        run: |
          echo "[]" > releases.json

          repos=("darksoldier1404/DPP-Core" "darksoldier1404/DP-Shop" "darksoldier1404/DP-SimplePrefix")

          for repo in "${repos[@]}"; do
            releases=$(curl -s "https://api.github.com/repos/$repo/releases?per_page=10")

            count=$(echo "$releases" | jq 'length')
            if [[ "$count" -eq 0 ]]; then
              continue
            fi

            for i in $(seq 0 $(($count - 1))); do
              name=$(echo "$releases" | jq -r ".[$i].name")
              tag=$(echo "$releases" | jq -r ".[$i].tag_name")
              url=$(echo "$releases" | jq -r ".[$i].html_url")
              date=$(echo "$releases" | jq -r ".[$i].published_at")

              # 릴리즈가 없거나 태그가 없으면 건너뜀
              if [[ "$tag" == "null" ]]; then
                continue
              fi

              json=$(jq -n --arg repo "$repo" --arg name "$name" --arg tag "$tag" --arg url "$url" --arg date "$date" \
                '{repo: $repo, name: $name, tag: $tag, url: $url, published_at: $date}')
              jq ". += [$json]" releases.json > tmp.json && mv tmp.json releases.json
            done
          done

      - name: Commit and push if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add releases.json
          git diff --cached --quiet || git commit -m "Update releases.json"
          git push
